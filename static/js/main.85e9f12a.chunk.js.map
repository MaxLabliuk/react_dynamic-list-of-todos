{"version":3,"sources":["User.js","TodoItem.js","TodoList.js","App.js","apiFetch.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","name","TodoItem","todo","id","title","src_User","completed","TodoList","getTodos","_useState","useState","_useState2","Object","slicedToArray","todos","setTodos","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","loaded","setLoaded","_useState7","_useState8","sortedColumn","setSortedColumn","_useState9","_useState10","error","setError","loadTodos","gotTodos","regenerator_default","async","_context","prev","next","awrap","sent","t0","stop","sortBy","field","toConsumableArray","sort","b","localeCompare","status","reverse","length","className","type","onClick","map","src_TodoItem","key","App","src_TodoList","_ref2","users","Promise","all","fetch","then","responses","response","json","abrupt","objectSpread2","find","userId","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.85e9f12a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => <td>{user.name}</td>;\n\nUser.propTypes = {\n  user: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n    <td>{todo.completed ? 'completed' : 'not completed'}</td>\n  </tr>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.string.isRequired,\n};\n\nexport default TodoItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ getTodos }) => {\n  const [todos, setTodos] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [sortedColumn, setSortedColumn] = useState();\n  const [error, setError] = useState(false);\n\n  const loadTodos = async() => {\n    try {\n      setLoading(true);\n\n      const gotTodos = await getTodos();\n\n      setTodos(gotTodos);\n      setLoading(false);\n      setLoaded(true);\n      setError(false);\n    } catch (e) {\n      setError(true);\n    }\n  };\n\n  const sortBy = (field) => {\n    const by = {\n      title: (a, b) => a.title.localeCompare(b.title),\n      status: (a, b) => b.completed - a.completed,\n      user: (a, b) => a.user.name.localeCompare(b.user.name),\n      id: (a, b) => a.id - b.id,\n    };\n\n    setSortedColumn(field);\n\n    sortedColumn !== field\n      ? setTodos([...todos].sort(by[field]))\n      : setTodos([...todos].reverse());\n  };\n\n  return (\n    <div>\n      {todos.length === 0 && !error && (\n        <button className=\"button\" type=\"button\" onClick={loadTodos}>\n          Load\n        </button>\n      )}\n      {isLoading && !error && <p>Loading...</p>}\n      {loaded && !isLoading && (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th onClick={() => sortBy('id')}>ID</th>\n              <th onClick={() => sortBy('title')}>TITLE</th>\n              <th onClick={() => sortBy('user')}>USER</th>\n              <th onClick={() => sortBy('status')}>STATUS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {todos.map(todo => (\n              <TodoItem todo={todo} key={todo.id} />\n            ))}\n          </tbody>\n        </table>\n      )}\n      {error && (\n        <div>\n          Error\n          <button className=\"button\" type=\"button\" onClick={loadTodos}>\n            Try again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  getTodos: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport { fetchTodosAndUsers } from './apiFetch';\nimport TodoList from './TodoList';\n\nconst App = () => {\n  const todoWithUsers = async() => {\n    const [users, todos] = await fetchTodosAndUsers();\n\n    return todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Dynamic list of todos</h1>\n      <TodoList getTodos={todoWithUsers} />\n    </div>\n  );\n};\n\nexport default App;\n","const URL_USERS = 'https://jsonplaceholder.typicode.com/users';\nconst URL_TODOS = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const fetchTodosAndUsers = () => Promise\n  .all([fetch(URL_USERS), fetch(URL_TODOS)])\n  .then(responses => Promise.all(responses.map(response => response.json())));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}